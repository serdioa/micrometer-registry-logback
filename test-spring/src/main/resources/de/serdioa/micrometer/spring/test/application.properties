
test.name=TestName

#
# Configure the metrics publisher.
#
de.serdioa.micrometer.spring.test.MetricsPublisher.counter=true
de.serdioa.micrometer.spring.test.MetricsPublisher.ds=true
de.serdioa.micrometer.spring.test.MetricsPublisher.functionCounter=false
de.serdioa.micrometer.spring.test.MetricsPublisher.functionTimer=false
de.serdioa.micrometer.spring.test.MetricsPublisher.gauge=true
de.serdioa.micrometer.spring.test.MetricsPublisher.longTaskTimer=true
de.serdioa.micrometer.spring.test.MetricsPublisher.timeGauge=false
de.serdioa.micrometer.spring.test.MetricsPublisher.timer=true

# Publish metrics to System.out.
de.serdioa.micrometer.spring.test.MetricsConsumer.enabled=false

# Disable some custom metrics.
management.metrics.enable.publisher.counter=false
#management.metrics.enable.publisher.ds=false
#management.metrics.enable.publisher.functionCounter=false
#management.metrics.enable.publisher.functionTimer=false
#management.metrics.enable.publisher.gauge=false
#management.metrics.enable.publisher.longTaskTimer=false
#management.metrics.enable.publisher.timeGauge=false
#management.metrics.enable.publisher.timer=true

# Publish aggregated metrics.
management.metrics.export.logging.agg.enabled=true
# management.metrics.export.logging.agg.step=10s
# management.metrics.export.logging.agg.filter.enabled.publisher=false
# management.metrics.export.logging.agg.filter.enabled.publisher.counter=true
# management.metrics.export.logging.agg.filter.enabled.publisher.timer=true

# Configure custom tags.
management.metrics.tags.tagA=valueA
management.metrics.tags.tagB=valueB

#
# Configure percentiles.
#

# Disable some percentiles. 
management.metrics.distribution.percentiles-histogram.publisher.ds=false
management.metrics.distribution.percentiles-histogram.publisher.longTaskTimer=false
management.metrics.distribution.percentiles-histogram.publisher.timer=false

# Set custom percentiles.
management.metrics.distribution.percentiles.publisher.ds=0.1, 0.2, 0.3
management.metrics.distribution.percentiles.publisher.longTaskTimer=0.14, 0.25, 0.36
management.metrics.distribution.percentiles.publisher.timer=0.7, 0.8, 0.9, 0.95

# Set custom minimum/maximum expected values for histograms
# management.metrics.distribution.minimum-expected-value.publisher.ds=5
# management.metrics.distribution.minimum-expected-value.publisher.timer=50ms
# management.metrics.distribution.minimum-expected-value.publisher.longTaskTimer=5ms

# management.metrics.distribution.maximum-expected-value.publisher.ds=100
# management.metrics.distribution.maximum-expected-value.publisher.timer=3s
# management.metrics.distribution.maximum-expected-value.publisher.longTaskTimer=1s

management.metrics.distribution.sla.publisher.ds=5,10,25,50,100
management.metrics.distribution.sla.publisher.timer=50ms,250ms,1s,2s,3s
management.metrics.distribution.sla.publisher.longTaskTimer=5ms,10ms,100ms,500ms,1000ms
